{
  "publisher": "wishtodaya",
  "name": "code2ai",
  "displayName": "code2ai",
  "icon": "images/icon.png",
  "description": "将项目代码导出为Markdown格式投喂给AI,提高开发效率。",
  "version": "0.0.2",
  "engines": {
    "vscode": "^1.101.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/wishtodaya/Code2AI.git"
  },
  "categories": [
    "Other",
    "Programming Languages",
    "Formatters"
  ],
  "keywords": [
    "ai",
    "markdown",
    "export",
    "code",
    "documentation",
    "chatgpt",
    "claude",
    "llm"
  ],
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "code2ai.parse",
        "title": "Code2AI:导出Markdown",
        "category": "Code2AI"
      },
      {
        "command": "code2ai.configure",
        "title": "打开设置",
        "category": "Code2AI"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "code2ai.parse",
          "when": "explorerResourceIsFolder || explorerResourceIsRoot",
          "group": "z_commands@1"
        },
        {
          "command": "code2ai.parse",
          "when": "resourceScheme == file && !explorerResourceIsFolder",
          "group": "z_commands@1"
        }
      ]
    },
    "configuration": {
      "title": "Code2AI",
      "properties": {
        "code2ai.maxTokensPerChunk": {
          "type": "number",
          "default": 100000,
          "minimum": 1000,
          "maximum": 1000000,
          "markdownDescription": "每个输出文件的最大 Token 数量。建议值：\n- GPT-3.5: 15000\n- GPT-4: 30000\n- Claude: 100000"
        },
        "code2ai.useGitignore": {
          "type": "boolean",
          "default": true,
          "description": "使用 .gitignore 规则排除文件"
        },
        "code2ai.excludePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "**/node_modules/**",
            "**/dist/**",
            "**/build/**",
            "**/out/**",
            "**/.next/**",
            "**/.nuxt/**",
            "**/coverage/**",
            "**/.git/**",
            "**/.svn/**",
            "**/.hg/**",
            "**/.idea/**",
            "**/*.min.js",
            "**/*.min.css",
            "**/*.bundle.js",
            "**/*.chunk.js",
            "**/vendor/**",
            "**/vendors/**",
            "**/*.png",
            "**/*.jpg",
            "**/*.jpeg",
            "**/*.gif",
            "**/*.ico",
            "**/*.svg",
            "**/*.mp4",
            "**/*.mp3",
            "**/*.zip",
            "**/*.tar",
            "**/*.gz",
            "**/*.exe",
            "**/*.dll",
            "**/*.so",
            "**/*.dylib",
            "**/.cache/**",
            "**/.tmp/**",
            "**/.temp/**",
            "**/tmp/**",
            "**/temp/**",
            "**/*.log",
            "**/*.lock",
            "**/*.db",
            "**/*.sqlite",
            "**/*.csv",
            "**/*.xlsx"
          ],
          "markdownDescription": "要排除的文件模式。支持 glob 语法，例如：`**/*.log`"
        },
        "code2ai.includePatterns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [],
          "markdownDescription": "只包含匹配的文件（留空包含所有支持的类型）。\n示例：\n- `src/**/*` - 只包含 src 目录\n- `**/*.ts` - 只包含 TypeScript 文件"
        },
        "code2ai.includeTestFiles": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "是否包含测试文件。**建议开启**，因为测试代码对 AI 理解项目结构很有帮助"
        },
        "code2ai.includeConfigFiles": {
          "type": "boolean",
          "default": true,
          "description": "是否包含配置文件（package.json、tsconfig.json 等）"
        },
        "code2ai.preserveFileIntegrity": {
          "type": "boolean",
          "default": true,
          "description": "保持文件完整性，避免在文件中间分割"
        },
        "code2ai.outputDirectory": {
          "type": "string",
          "default": "",
          "markdownDescription": "输出目录（留空使用当前目录）。支持变量：\n- `${workspaceFolder}` - 工作区根目录"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src",
    "test": "vscode-test"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "20.x",
    "@types/vscode": "^1.101.0",
    "@typescript-eslint/eslint-plugin": "^8.31.1",
    "@typescript-eslint/parser": "^8.31.1",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.5.2",
    "eslint": "^9.25.1",
    "typescript": "^5.8.3"
  },
  "dependencies": {
    "ignore": "^7.0.5"
  },
  "license": "MIT"
}